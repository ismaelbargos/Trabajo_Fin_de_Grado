var request = require('request');

// Probably not the best way to share vars between functions in module scope. Please let me know the right way.
var globalIdClient = '';
var globalPasskey = '';

// API variables
var APIUrl = 'https://openbus.emtmadrid.es:9443/emt-proxy-server/last/';

module.exports = {
	initAPICredentials : function (idClient, passKey ){
		globalIdClient = idClient;
		globalPasskey = passKey;
	},
	
	getArriveStop : function (idStop, callback ){

		//Informacion del cuando el bus llega a una parada de destino.
		console.log("datos parada: " + idStop);
		// Response JSON, to be populated later
		var response = {
		};

		var url_api = APIUrl + 'geo/GetArriveStop.php';

		// Entry parameters
		var formData = {
			"cultureInfo": "ES",
			"idStop": idStop,
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.arrives = (JSON.parse(body)).arrives;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},
	
	getNodesLines : function (idStop, callback ){

		// Devuelve todas los identificadores de parada, como sus coordenadas, nombre lineas y direcciones.
		var response = {
		};

		var url_api = APIUrl + 'bus/GetNodesLines.php';

		// Entry parameters
		var formData = {
			"Nodes": idStop,
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Code = (JSON.parse(body)).resultCode;
				response.Description = (JSON.parse(body)).resultDescription
				response.resultValues = (JSON.parse(body)).resultValues;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},
	
	getCalendar: function(fechaini, fechafin, callback){
		//Devuelve el horario de todos los dias de una linea escogida entre las horas fechas de inicio y fin.
		var response = {
		};

		var url_api = APIUrl + 'bus/GetCalendar.php';
		// Entry parameters
		var formData = {
			"SelectDateBegin": fechaini,
			"SelectDateEnd": fechafin,
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			console.log(body);
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Code = (JSON.parse(body)).resultCode;
				response.Description = (JSON.parse(body)).resultDescription
				response.resultValuess = (JSON.parse(body)).resultValues;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getGroups: function(callback){
		//Devuelve todas las lineas y sus detalles.
		var response = {
		};

		var url_api = APIUrl + 'bus/GetGroups.php';
		// Entry parameters
		var formData = {
			"cultureInfo": "ES",
			"statistics": "",
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			console.log(body);
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Code = (JSON.parse(body)).resultCode;
				response.Description = (JSON.parse(body)).resultDescription
				response.resultValuess = (JSON.parse(body)).resultValues;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},
	
	getListLines : function(linea, fecha, callback){
		//Devuelve la linea con su descripcion y su grupo.
		var response = {
		};

		var url_api = APIUrl + 'bus/GetListLines.php';
		// Entry parameters

		var formData = {
			"SelectDate": fecha,
			"Lines": linea,
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Code = (JSON.parse(body)).resultCode;
				response.Description = (JSON.parse(body)).resultDescription
				response.resultValuess = (JSON.parse(body)).resultValues;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	
	getRouteLines : function(linea, fecha, callback){
		//Devuelve la ruta de una linea con la ruta las coordenadas de las paradas y los ejes.
		var response = {
		};

		var url_api = APIUrl + 'bus/GetRouteLines.php';
		// Entry parameters

		var formData = {
			"SelectDate": fecha,
			"Lines": linea,
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Code = (JSON.parse(body)).resultCode;
				response.Description = (JSON.parse(body)).resultDescription
				response.resultValuess = (JSON.parse(body)).resultValues;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},
	
	getRouteLinesRoute : function(linea, fecha, callback){
		//Obtiene la ruta de una linea con los puntos de vertice y las coordenadas de las paradas.
		var response = {
		};

		var url_api = APIUrl + 'bus/GetRouteLinesRoute.php';
		// Entry parameters

		var formData = {
			"SelectDate": fecha,
			"Lines": linea,
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Code = (JSON.parse(body)).resultCode;
				response.Description = (JSON.parse(body)).resultDescription
				response.resultValuess = (JSON.parse(body)).resultValues;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},
	
	getTimesLines : function(linea, fecha, callback){
		//Devuelve los horarios actuales para las l√≠neas solicitadas
		var response = {
		};

		var url_api = APIUrl + 'bus/GetTimesLines.php';
		// Entry parameters

		var formData = {
			"SelectDate": fecha,
			"Lines": linea,
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Code = (JSON.parse(body)).resultCode;
				response.Description = (JSON.parse(body)).resultDescription
				response.resultValuess = (JSON.parse(body)).resultValues;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},
	
	getTimeTableLines : function(linea, fecha, callback){
		//No info. Sera similar a la anterior.
		var response = {
		};

		var url_api = APIUrl + 'bus/GetTimeTableLines.php';
		// Entry parameters

		var formData = {
			"SelectDate": fecha,
			"Lines": linea,
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Code = (JSON.parse(body)).resultCode;
				response.Description = (JSON.parse(body)).resultDescription
				response.resultValuess = (JSON.parse(body)).resultValues;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getInfoLine : function(linea, fecha, callback){

		console.log(linea);
		console.log(fecha);
		//Devuelve la informacion de una linea en el dia dado.
		var response = {
		};

		var url_api = APIUrl + 'geo/GetInfoLineExtend.php';
		// Entry parameters

		var formData = {
			"SelectDate": fecha,
			"Lines": linea,
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": ""
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Line = (JSON.parse(body)).Line;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getInfoLineExtended : function(linea, fecha, callback){

		//Devuelve la informacion extendida de una linea en el dia dado.
		var response = {
		};

		var url_api = APIUrl + 'geo/GetInfoLineExtend.php';
		// Entry parameters

		var formData = {
			"SelectDate": fecha,
			"Lines": linea,
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": ""
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.Line = (JSON.parse(body)).Line;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getPointsOfInterest : function(latitud,longitud,distancia,callback){
		//Devuelve los puntos de interes dentro de un radio con centro en el punto dado en la funcion
		var response = {
		};

		var url_api = APIUrl + 'geo/GetPointsOfInterest.php';
		// Entry parameters

		var formData = {
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": "",
			"moreInfo": "",
			"latitude": latitud,
			"longitude": longitud,
			"tipos":"",
			"Radius": distancia
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			console.log(body);
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.poiList = (JSON.parse(body)).poiList;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getPointsOfInterestTypes : function(callback){
		//Devuelve los tipos de los puntos de interes.
		var response = {
		};

		var url_api = APIUrl + 'geo/GetPointsOfInterestTypes.php';
		// Entry parameters

		var formData = {
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": "",
			"moreInfo": ""
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.types = (JSON.parse(body)).types;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getStopsFromStop : function(parada, distancia, callback){
		//Devuelve las paradas dentro del radio de una parada y las lineas que pasan por ellas.
		var response = {
		};

		var url_api = APIUrl + 'geo/GetStopsFromStop.php';
		// Entry parameters

		var formData = {
			"idStop": parada,
			"Radius": distancia,
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": ""
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.latitude = (JSON.parse(body)).latitude;
				response.longitude = (JSON.parse(body)).longitude;
				response.stops = (JSON.parse(body)).stops;
				response.resultCode = (JSON.parse(body)).resultCode;
				response.resultDescription = (JSON.parse(body)).resultDescription;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getStopsFromXY : function(latitud, longitud, distancia, callback){
		//Obtiene las paradas dentro del radio del punto dado en la funcion y las lineas que pasan por ellas.
		var response = {
		};

		var url_api = APIUrl + 'geo/GetStopsFromXY.php';
		// Entry parameters

		var formData = {
			"latitude": latitud,
			"longitude": longitud,
			"Radius": distancia,
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": ""
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.latitude = (JSON.parse(body)).latitude;
				response.longitude = (JSON.parse(body)).longitude;
				response.stop = (JSON.parse(body)).stop;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getStopsLine : function(linea, direccion, callback){
		//Devuelve una lista con las paradas de una linea con una direccion dada.
		var response = {
		};

		var url_api = APIUrl + 'geo/GetStopsLine.php';
		// Entry parameters

		var formData = {
			"line": linea,
			"direction": direccion,
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": ""
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.lineId = (JSON.parse(body)).lineId;
				response.label = (JSON.parse(body)).label;
				response.destination = (JSON.parse(body)).destination;
				response.stop = (JSON.parse(body)).stop;
				response.line = (JSON.parse(body)).line;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},
	getStreet : function(nom_calle, num_calle, distancia, paradas, callback){
		//Devuelve las paradas cercanas a una calle.
		var response = {
		};

		var url_api = APIUrl + 'geo/GetStreet.php';
		// Entry parameters

		var formData = {
			"description": nom_calle,
			"streetNumber": num_calle,
			"Radius": distancia,
			"Stops": paradas,
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": ""
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.site = (JSON.parse(body)).site;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getStreetFromXY : function(latitud, longitud, distancia, callback){
		//devuelve las paradas cercanas a un punto dado.
		var response = {
		};

		var url_api = APIUrl + 'geo/GetStreetFromXY.php';
		// Entry parameters

		var formData = {
			"latitude": latitud,
			"longitude": longitud,
			"Radius": distancia,
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": ""
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.site = (JSON.parse(body)).site;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	
	getEstimatesIncident : function(parada, linea, yntextstop, ynaudiostop, yntextestimat, ynaudioestimat, yntextinciden, ynaudioinciden, fechaincident, callback){
		
		//Consigue estimar el tiempo de llegada a la parada y las incidencias relacionados
		var response = {
		};

		var url_api = APIUrl + 'media/GetEstimatesIncident.php';
		// Entry parameters

		var formData = {
			"idStop": parada,
			"idLine": linea,
			"Text_StopRequired_YN": yntextstop,
			"Audio_StopRequired_YN": ynaudiostop,
			"Text_EstimationsRequired_YN": yntextestimat,
			"Audio_EstimationRequired_YN": ynaudioestimat,
			"Text_IncidencesRequired_YN": yntextinciden,
			"Audio_IncidencesRequired_YN": ynaudioinciden,
			"DateTime_Referenced_Incidencies_YYYYMMDD": fechaincident,
			"idClient": globalIdClient,
			"passKey": globalPasskey,
			"cultureInfo": "ES",
			"statistics": ""
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.errorCode = (JSON.parse(body)).errorCode;
				response.description = (JSON.parse(body)).description;
				response.stop = (JSON.parse(body)).stop;
				response.arrives = (JSON.parse(body)).arrives;
				response.incident = (JSON.parse(body)).incident;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},

	getStreetRoute:function(latitudInicio, longitudInicio, latitudFin, longitudFin, criterio, dia, mes, a√±o, hora, minutos, origen, fin, audio, callback){
		
		//Pide hasta tres rutas √≥ptimas de un lugar a otro mediante autob√∫s o caminar, fuente y destino deben estar en un formato conocido para el sistema , lo que significa que deber√≠a haber sido validada por una llamada getStreet
		var response = {
		};

		var url_api = APIUrl + 'media/GetStreetRoute.php';
		// Entry parameters

		var formData = {
			"latitudeFrom": latitudInicio,
			"longitudeFrom": longitudInicio,
			"latitudeTo": latitudFin,
			"longitudeTo": longitudFin,
			"criteriaSelection": criterio,
			"day": dia,
			"month": mes,
			"year": a√±o,
			"hour": hora,
			"minute": minutos,
			"originName": origen,
			"destinationName": fin,
			"GenerarAudio": audio,
			"idClient": globalIdClient,
			"passKey": globalPasskey
		};

		// Perform API call
		request.post({
			url: url_api, 
			form: formData,
			strictSSL: false // The API certificate looks self signed

		}, function (err, httpResponse, body) {
			if ( err ) {
				console.error('Error while connecting:');
				response.status = 400;
				response.error = err;
			}else{
				console.log('REST call OK');
				response.status = 200;
				response.errorCode = (JSON.parse(body)).errorCode;
				response.description = (JSON.parse(body)).description;
				response.listRouteData = (JSON.parse(body)).listRouteData;
				response.POIS = (JSON.parse(body)).POIS;
			}

			if (typeof callback === "function") {
				callback ( response );
			}
		});
	},
}
